version: 2.1

commands:
  prepare:
    steps:
      - checkout
      - run:
          name: Perform composer self-update
          command: sudo composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}
            - composer-v1-{{ .Environment.CIRCLE_JOB }}
      - run:
          name: Enable code coverage
          command: |
            sudo pecl install pcov
            sudo docker-php-ext-enable pcov
            sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            sudo docker-php-ext-install posix
            sudo docker-php-ext-install pcntl
      - run:
          name: Install composer dependencies
          command: composer install -n --prefer-dist
      - run:
          name: Update composer dependencies
          command: composer update --prefer-dist --no-interaction
      - persist_to_workspace:
          root: .
          paths:
            - composer.*
            - .snyk
      - save_cache:
          key: composer-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}
          paths:
            - vendor

  run-phpinsights:
    steps:
      - run:
          name: Run PHP Insights code quality analysis
          command: php ./vendor/bin/phpinsights -v --no-interaction --min-quality=90 --min-complexity=50 --min-architecture=90 --min-style=90

  run-phpstan:
    steps:
      - run:
          name: Run PHPStan static code analysis
          command: php ./vendor/bin/phpstan analyse --ansi --memory-limit 512M

  run-psalm:
    steps:
      - run:
          name: Run Psalm static code analysis
          command: php ./vendor/bin/psalm --threads=4

  run-pest:
    steps:
      - run:
          name: Run Pest unit tests
          command: php ./vendor/bin/pest --stop-on-failure --min 70 --coverage-xml=build/coverage/coverage-xml --log-junit=build/coverage/junit.xml
      - persist_to_workspace:
          root: .
          paths:
            - build

  run-infection:
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Infection mutation tests
          command: php ./vendor/bin/infection --skip-initial-tests --threads=4 --test-framework=pest --coverage=build/coverage --no-progress --min-msi=48 --min-covered-msi=70

jobs:
  php_7_4:
    docker:
      - image: circleci/php:7.4
    steps:
      - prepare
      - run-phpinsights
      - run-phpstan
      - run-psalm
      - run-pest
      - run-infection

  php_8_0:
    docker:
      - image: circleci/php:8.0
    steps:
      - prepare
      - run-phpinsights
      - run-phpstan
      - run-psalm
      - run-pest
      - run-infection

  snyk:
    docker:
      - image: snyk/snyk-cli:composer
    steps:
      - attach_workspace:
          at: .
      - run: snyk test
      - run:
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" ]]
            then
            snyk monitor --org=auth0-sdks
            fi
          when: always

workflows:
  test-php-versions:
    jobs:
      - php_7_4
      - php_8_0

  vulnerability-check:
    jobs:
      - php_7_4
      - snyk:
          filters:
            branches:
              only:
                - master
          context: snyk-env
          requires:
            - php_7_4
